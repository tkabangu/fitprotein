<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="stylesheet" type="text/css" href="{{ asset('/assets/plugins/datatables/datatables.min.css')}}"/>

        <link href="{{ asset('/assets/css/bootstrap.css')}}" rel="stylesheet">
        <link href="{{ asset('/assets/css/style.css')}}" rel="stylesheet">
        <link href="{{ asset('/assets/css/responsive.css')}}" rel="stylesheet">

        <!-- Color Themes -->
        <link id="theme-color-file" href="{{ asset('/assets/css/color-themes/teal-theme.css')}}" rel="stylesheet">


        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
        {% endblock %}
    </head>
    <body>
    <div class="page-wrapper">

        {% include 'header.html.twig' %}


        {% block body %}{% endblock %}



        <!-- Modal -->
        <div class="modal fade" id="cart" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Cart</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="show-cart table">

                        </table>
                        <div>Total price: $<span class="total-cart"></span></div>
                    </div>
                    <div class="modal-footer">

                        <button class="clear-cart btn btn-danger pull-left">Clear Cart</button>

                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Order now</button>
                    </div>
                </div>
            </div>
        </div>

        {% include 'footer.html.twig' %}

    </div>

        {% block javascripts %}
            <script type="text/javascript" src="{{ asset('assets/js/jquery.js') }}"></script>

            <script type="text/javascript" src="{{ asset('assets/plugins/datatables/datatables.min.js') }}"></script>


            <!--Scroll to top-->
            <div class="scroll-to-top scroll-to-target" data-target="html"><span class="fa fa-arrow-up"></span></div>

            <script src="{{ asset('assets/js/bootstrap.min.js') }}"></script>
            <script src="{{ asset('assets/js/jquery.bootstrap-touchspin.js') }}"></script>
            <script src="{{ asset('assets/js/jquery.mCustomScrollbar.concat.min.js') }}"></script>
            <script src="{{ asset('assets/js/jquery.fancybox.js') }}"></script>
            <script src="{{ asset('assets/js/appear.js') }}"></script>
            <script src="{{ asset('assets/js/parallax.min.js') }}"></script>
            <script src="{{ asset('assets/js/tilt.jquery.min.js') }}"></script>
            <script src="{{ asset('assets/js/jquery.paroller.min.js') }}"></script>
            <script src="{{ asset('assets/js/owl.js') }}"></script>
            <script src="{{ asset('assets/js/wow.js') }}"></script>
            <script src="{{ asset('assets/js/nav-tool.js') }}"></script>
            <script src="{{ asset('assets/js/jquery-ui.js') }}"></script>
            <script src="{{ asset('assets/js/color-settings.js') }}"></script>

            {{ encore_entry_script_tags('app') }}

        {% endblock %}

    {% block javascript_footer %}{% endblock %}

    <script type="text/javascript">


        $("input[name='quantity']").TouchSpin({
            min: 0,
            max: $(this).data('max')
        });

        var shoppingCart = (function() {
            // =============================
            // Private methods and propeties
            // =============================
            var cart = [];

            // Constructor
            function Item(id, count, filename, name, price) {
                this.id = id;
                this.filename = filename;
                this.name = name;
                this.price = price;
                this.count = count;
            }

            // Save cart
            function saveCart() {
                sessionStorage.setItem('shoppingCart2', JSON.stringify(cart));
            }

            // Load cart
            function loadCart() {
                cart = JSON.parse(sessionStorage.getItem('shoppingCart2'));
            }
            if (sessionStorage.getItem("shoppingCart2") != null) {
                loadCart();
            }


            // =============================
            // Public methods and propeties
            // =============================
            var obj = {};

            // Add to cart
            obj.addItemToCart = function(id,count, filename, name, price) {

                for(var item in cart) {
                    if(cart[item].id === id) {
                        var tmp = parseFloat(cart[item].count, 10) + parseFloat(count, 10);
                        cart[item].count = tmp;
                        saveCart();
                        return;
                    }
                }
                var item = new Item(id, count, filename, name, price);
                cart.push(item);
                saveCart();
            }
            // Set count from item
            obj.setCountForItem = function(id, count) {
                for(var i in cart) {
                    if (cart[i].id === id) {
                        cart[i].count = count;
                        break;
                    }
                }
            };
            // Remove item from cart
            obj.removeItemFromCart = function(id) {
                for(var item in cart) {
                    if(cart[item].id === id) {
                        cart[item].count --;
                        if(cart[item].count === 0) {
                            cart.splice(item, 1);
                        }
                        break;
                    }
                }
                saveCart();
            }

            // Add item to cart
            obj.addItem2Cart = function(id) {
                for(var item in cart) {
                    if(cart[item].id === id) {
                        cart[item].count ++;
                        if(cart[item].count === 0) {
                            cart.splice(item, 1);
                        }
                        break;
                    }
                }
                saveCart();
            }

            // Remove all items from cart
            obj.removeItemFromCartAll = function(id) {
                for(var item in cart) {
                    if(cart[item].id === id) {
                        cart.splice(item, 1);
                        break;
                    }
                }
                saveCart();
            }

            // Clear cart
            obj.clearCart = function() {
                cart = [];
                saveCart();
            }

            // Count cart
            obj.totalCount = function() {
                var totalCount = 0;
                for(var item in cart) {
                    totalCount += cart[item].count;
                }
                return totalCount;
            }

            // Total cart
            obj.totalCart = function() {
                var totalCart = 0;
                for(var item in cart) {
                    totalCart += cart[item].price * cart[item].count;
                }
                return Number(totalCart.toFixed(2));
            }

            // List cart
            obj.listCart = function() {
                var cartCopy = [];
                for(i in cart) {
                    item = cart[i];
                    itemCopy = {};
                    for(p in item) {
                        itemCopy[p] = item[p];

                    }
                    itemCopy.total = Number(item.price * item.count).toFixed(2);
                    cartCopy.push(itemCopy)
                }
                return cartCopy;
            }

            // cart : Array
            // Item : Object/Class
            // addItemToCart : Function
            // removeItemFromCart : Function
            // removeItemFromCartAll : Function
            // clearCart : Function
            // countCart : Function
            // totalCart : Function
            // listCart : Function
            // saveCart : Function
            // loadCart : Function
            return obj;
        })();


        // Add item
        $('.add-to-cart').click(function(event) {
            event.preventDefault();
            var id = $(this).data('id');
            var filename = $(this).data('filename');
            var name = $(this).data('name');
            var price = Number($(this).data('price'));
            var count = $(this).parent().parent().parent().find('input.item-quantity').val();
            shoppingCart.addItemToCart(id, count, filename, name, price);
            displayCart();
        });

        // Clear items
        $('.clear-cart').click(function() {
            shoppingCart.clearCart();
            displayCart();
        });


        function displayCart() {
            var cartArray = shoppingCart.listCart();
            var output = "";
            for(var i in cartArray) {
                output += "<tr>"
                    + "<td><img src='/images/products/"+ cartArray[i].filename + "' width='50px'></td>"
                    + "<td>" + cartArray[i].name + "</td>"
                    + "<td>(" + cartArray[i].price + ")</td>"
                    + "<td><div class='input-group'><button class='minus-item input-group-addon btn btn-primary' data-id=" + cartArray[i].id + ">-</button>"
                    + "<input type='number' class='item-count form-control' data-id='" + cartArray[i].id + "' value='" + cartArray[i].count + "'>"
                    + "<button class='plus-item btn btn-primary input-group-addon' data-id=" + cartArray[i].id + ">+</button></div></td>"
                    + "<td><button class='delete-item btn btn-danger' data-id=" + cartArray[i].id + ">X</button></td>"
                    + " = "
                    + "<td>" + cartArray[i].total + "</td>"
                    +  "</tr>";
            }
            $('.show-cart').html(output);
            $('.total-cart').html(shoppingCart.totalCart());
            $('.total-count').html(shoppingCart.totalCount());
        }

        // Delete item button

        $('.show-cart').on("click", ".delete-item", function(event) {
            var id = $(this).data('id')
            shoppingCart.removeItemFromCartAll(id);
            displayCart();
        })


        // -1
        $('.show-cart').on("click", ".minus-item", function(event) {
            var id = $(this).data('id');
            shoppingCart.removeItemFromCart(id);
            displayCart();
        })
        // +1
        $('.show-cart').on("click", ".plus-item", function(event) {
            var id = $(this).data('id');
            shoppingCart.addItem2Cart(id);
            displayCart();
        })

        // Item count input
        $('.show-cart').on("change", ".item-count", function(event) {
            var id = $(this).data('id');
            var count = Number($(this).val());
            shoppingCart.setCountForItem(id, count);
            displayCart();
        });

        displayCart();


    </script>

    </body>
</html>
